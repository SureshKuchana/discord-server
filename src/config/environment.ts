import { config } from "dotenv"
import process from "process"

config()

const {
  DATABASE_URL,
  DATABASE_HOSTNAME,
  DATABASE_NAME,
  DATABASE_PASSWORD,
  DATABASE_USERNAME,
  DATABASE_PORT,
  REDIS_URL,
  REDIS_HOST,
  REDIS_PORT,
  REDIS_PASSWORD,
  CLOUDINARY_NAME,
  CLOUDINARY_KEY,
  CLOUDINARY_SECRET,
  PORT,
  CORS_ORIGIN,
  NODE_ENV,
  COOKIE_NAME,
  FORGET_PASSWORD_PREFIX,
  INVITE_LINK_PREFIX,
} = process.env

const requiredEnvs = {
  DATABASE_HOSTNAME,
  DATABASE_NAME,
  DATABASE_PASSWORD,
  DATABASE_USERNAME,
  DATABASE_PORT,
  REDIS_URL,
  REDIS_HOST,
  REDIS_PORT,
  REDIS_PASSWORD,
  CLOUDINARY_NAME,
  CLOUDINARY_KEY,
  CLOUDINARY_SECRET,
  NODE_ENV,
  COOKIE_NAME,
  FORGET_PASSWORD_PREFIX,
  INVITE_LINK_PREFIX,
}

for (const [KEY, VALUE] of Object.entries(requiredEnvs)) {
  if (VALUE === "") {
    // eslint-disable-next-line no-console
    console.warn(`Missing required environment var ${KEY}`)
  }
}

export default {
  DATABASE_URL: DATABASE_URL as string,
  DATABASE_HOSTNAME: DATABASE_HOSTNAME as string,
  DATABASE_NAME: DATABASE_NAME as string,
  DATABASE_PASSWORD: DATABASE_PASSWORD as string,
  DATABASE_USERNAME: DATABASE_USERNAME as string,
  DATABASE_PORT: DATABASE_PORT as string,
  REDIS_URL: REDIS_URL as string,
  REDIS_HOST: REDIS_HOST as string,
  REDIS_PORT: REDIS_PORT as string,
  REDIS_PASSWORD: REDIS_PASSWORD as string,
  CLOUDINARY_NAME: CLOUDINARY_NAME as string,
  CLOUDINARY_KEY: CLOUDINARY_KEY as string,
  CLOUDINARY_SECRET: CLOUDINARY_SECRET as string,
  PORT: PORT ?? 4000,
  CORS_ORIGIN: CORS_ORIGIN ?? "http://localhost:3000",
  NODE_ENV: (NODE_ENV as string) ?? "local",
  COOKIE_NAME: COOKIE_NAME,
  FORGET_PASSWORD_PREFIX: FORGET_PASSWORD_PREFIX,
  INVITE_LINK_PREFIX: INVITE_LINK_PREFIX,
}
